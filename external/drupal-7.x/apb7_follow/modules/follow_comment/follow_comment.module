<?php

/**
 * @file
 * Allow advanced integration with entities.
 */

/**
 * Implements hook_notification_type_info().
 */
function follow_comment_notification_type_info() {
  return array(
    'comment' => array(
      'class'       => 'Apb\Notification\Formatter\CommentFormatter',
      'description' => t("Comment thread"),
    ),
  );
}

/**
 * Implements hook_field_extra_fields().
 */
function follow_comment_field_extra_fields() {

  $ret  = array();
  $info = entity_get_info('node');

  foreach ($info['bundles'] as $bundle => $bundle_info) {
    if (variable_get('comment_' . $bundle, COMMENT_NODE_HIDDEN)) {
      $ret['node'][$bundle]['display']['follow_comment'] = array(
        'label'       => t("Follow comment thread"),
        'description' => t("Form that allows the current user to follow or unfollow the current node comment thread."),
      );
    }
  }

  return $ret;
}

/**
 * Implements hook_node_view_alter().
 */
function follow_comment_node_view_alter(&$build) {
  $build['follow_comment'] = drupal_get_form('apb7_follow_account_link_form', $build['#node']->nid, 'comment');
}

/**
 * Implements hook_comment_insert().
 */
function follow_comment_comment_insert($comment) {
  if ($comment->status) {
    notification_manager_get()->notify('comment', $comment->nid, array(
      'a' => 'insert',
      'c' => $comment->cid,
    ));
  }
}

/**
 * Implements hook_comment_update().
 */
function follow_comment_comment_update($comment) {
  if ($comment->status) {
    notification_manager_get()->notify('comment', $comment->nid, array(
      'a' => 'update',
      'c' => $comment->cid,
    ));
  }
}

/**
 * Implements hook_comment_publish().
 */
function follow_comment_comment_publish($comment) {
  notification_manager_get()->notify('comment', $comment->nid, array(
    'a' => 'insert',
    'c' => $comment->cid,
  ));
}

/**
 * Implements hook_comment_unpublish().
 */
function follow_comment_comment_unpublish($comment) {
  notification_manager_get()->notify('comment', $comment->nid, array( 
    'a' => 'delete',
    'c' => $comment->cid,
  ));
}

/**
 * Implements hook_comment_delete().
 */
function follow_comment_comment_delete($comment) {
  if ($comment->status) {
    notification_manager_get()->notify('comment', $comment->nid, array(
      'a' => 'delete',
      'c' => $comment->cid,
      // Comment already has been deleted, we need more data!
      'n' => $comment->nid,
      'u' => $comment->uid,
      's' => $comment->subject,
    ));
  }
}
